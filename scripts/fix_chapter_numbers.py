# -*- coding: utf-8 -*-
"""
修正文档章节编号的脚本
"""

import re

def fix_chapter_numbers():
    file_path = "documents/FastCAE技术分析报告_完整版.md"
    
    # 读取文件
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # 定义替换规则
    replacements = [
        # 第5章 (原第12章)
        (r'### 12\.1\.2\. 工厂模式', '### 5.1.2. 工厂模式'),
        (r'### 12\.1\.3\. 单例模式', '### 5.1.3. 单例模式'),
        (r'### 12\.1\.4\. 适配器模式', '### 5.1.4. 适配器模式'),
        (r'### 12\.1\.5\. 策略模式', '### 5.1.5. 策略模式'),
        (r'### 12\.1\.6\. 观察者模式', '### 5.1.6. 观察者模式'),
        (r'## 12\.2\. 代码质量指标', '## 5.2. 代码质量指标'),
        (r'## 12\.3\. 具体使用示例和最佳实践', '## 5.3. 具体使用示例和最佳实践'),
        (r'### 12\.3\.1\. 应用程序开发完整示例', '### 5.3.1. 应用程序开发完整示例'),
        (r'### 12\.3\.2\. 网格划分完整流程示例', '### 5.3.2. 网格划分完整流程示例'),
        (r'### 12\.3\.3\. 二维图表创建完整示例', '### 5.3.3. 二维图表创建完整示例'),
        (r'### 12\.3\.4\. 插件开发完整示例', '### 5.3.4. 插件开发完整示例'),
        (r'### 12\.3\.5\. 最佳实践总结', '### 5.3.5. 最佳实践总结'),
        (r'## 12\.4\. 代码架构优势', '## 5.4. 代码架构优势'),
        
        # 第6章 (原第13章)
        (r'# 13\. 技术栈和依赖分析', '# 6. 技术栈和依赖分析'),
        (r'## 13\.1\. 核心技术栈', '## 6.1. 核心技术栈'),
        (r'### 13\.1\.1\. 开发语言和框架', '### 6.1.1. 开发语言和框架'),
        (r'### 13\.1\.2\. 第三方依赖库', '### 6.1.2. 第三方依赖库'),
        (r'### 13\.1\.3\. 构建系统', '### 6.1.3. 构建系统'),
        (r'## 13\.2\. 依赖关系分析', '## 6.2. 依赖关系分析'),
        (r'### 13\.2\.1\. 核心依赖', '### 6.2.1. 核心依赖'),
        (r'### 13\.2\.2\. 可选依赖', '### 6.2.2. 可选依赖'),
        (r'## 13\.3\. 平台兼容性', '## 6.3. 平台兼容性'),
        
        # 第7章 (原第14章)
        (r'# 14\. 项目优势和改进建议', '# 7. 项目优势和改进建议'),
        (r'## 14\.1\. 项目优势', '## 7.1. 项目优势'),
        (r'### 14\.1\.1\. 架构设计优势', '### 7.1.1. 架构设计优势'),
        (r'### 14\.1\.2\. 技术选型优势', '### 7.1.2. 技术选型优势'),
        (r'### 14\.1\.3\. 开发生态优势', '### 7.1.3. 开发生态优势'),
        (r'## 14\.2\. 改进建议', '## 7.2. 改进建议'),
        (r'### 14\.2\.1\. 短期改进', '### 7.2.1. 短期改进'),
        (r'### 14\.2\.2\. 中期改进', '### 7.2.2. 中期改进'),
        (r'### 14\.2\.3\. 长期规划', '### 7.2.3. 长期规划'),
        (r'## 14\.3\. 技术债务管理', '## 7.3. 技术债务管理'),
        (r'### 14\.3\.1\. 当前技术债务', '### 7.3.1. 当前技术债务'),
        (r'### 14\.3\.2\. 债务清理计划', '### 7.3.2. 债务清理计划'),
        
        # 第8章 (原第15章)
        (r'# 15\. 结论', '# 8. 结论'),
        (r'## 15\.1\. 技术成熟度评估', '## 8.1. 技术成熟度评估'),
        (r'## 15\.2\. 核心优势总结', '## 8.2. 核心优势总结'),
        (r'## 15\.3\. 发展潜力分析', '## 8.3. 发展潜力分析'),
        (r'## 15\.4\. 建议与展望', '## 8.4. 建议与展望'),
    ]
    
    # 执行替换
    for pattern, replacement in replacements:
        content = re.sub(pattern, replacement, content)
        print(f"替换: {pattern} -> {replacement}")
    
    # 写入文件
    with open(file_path, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("章节编号修正完成！")

if __name__ == "__main__":
    fix_chapter_numbers()
